{"version":3,"sources":["utils/formulas.js","components/CanonBase.jsx","components/CanonPipe.jsx","utils/constants.js","components/Ground.jsx","components/Sky.jsx","components/CannonBall.jsx","components/CurrentScore.jsx","components/FlyingObjectBase.jsx","components/FlyingObjectTop.jsx","components/FlyingObject.jsx","components/Heart.jsx","components/StartGame.jsx","components/Title.jsx","components/Login.jsx","components/Rank.jsx","components/Leaderboard.jsx","components/Canvas.jsx","App.js","reportWebVitals.js","actions/index.js","containers/Game.js","reducers/moveCannonBalls.js","reducers/checkCollisions.js","reducers/moveObjects.js","reducers/createFlyingObjects.js","reducers/startGame.js","reducers/shoot.js","reducers/index.js","index.js"],"names":["pathFromBezierCurve","cubicBezierCurve","initialAxis","initialControlPoint","endingControlPoint","endingAxis","x","y","radiansToDegrees","radians","Math","PI","calculateAngle","x1","y1","x2","y2","quotient","atan","degreesToRadian","degrees","calculateNextPosition","angle","divisor","realAngle","stepsX","cos","stepsY","sin","CannonBase","props","cannonBaseStyle","fill","stroke","strokeWidth","height","style","d","CannonPipe","cannonPipeStyle","transform","rotation","skyAndGroundWidth","flyingObjectsStarterPositions","Ground","id","width","Sky","CannonBall","cx","position","cy","rx","ry","CurrentScore","filter","fontFamily","fontSize","score","FlyingObjectBase","FlyingObjectTop","moveVertically","keyframes","Move","styled","g","FlyingObject","Heart","heartStyle","leftSide","rightSide","StartGame","button","gameWidth","cursor","onClick","text","textAnchor","Title","textStyle","aliensLineCurve","goHomeLineCurve","xlinkHref","Login","authenticate","Rank","rectId","player","rank","clipId","currentPlayer","pictureProperties","href","picture","clipPath","frameProperties","name","maxScore","Leaderboard","leaderboard","sort","prev","next","map","member","index","strokeDasharray","idx","defaultProps","Canvas","viewBox","window","innerWidth","lives","i","gameState","heartPosition","push","preserveAspectRatio","onMouseMove","trackMouse","shoot","dx","dy","stdDeviation","cannonBalls","cannonBall","kills","started","startGame","signIn","players","flyingObjects","flyingObject","Auth0","domain","clientID","redirectUri","responseType","scope","audience","App","bind","socket","self","this","auth","playerProfile","sub","loggedIn","io","query","on","leaderboardLoaded","forEach","setInterval","moveObjects","canvasMousePosition","onresize","cnv","document","getElementById","innerHeight","nextProps","emit","e","svg","point","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getCanvasPosition","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MOVE_OBJECTS","START_GAME","LEADERBOARD_LOADED","LOGGED_IN","SHOOT","Game","connect","state","dispatch","mousePosition","type","moveBalls","checkCollisions","flyingDiscs","objectsDestroyed","flyingDisc","currentLifeTime","Date","getTime","createdAt","calculatedPosition","rectA","rectB","checkCollision","cannonBallId","flyingDiscId","action","newState","now","lastObjectCreatedAt","length","predefinedPosition","floor","random","newFlyingObject","createFlyingObjects","object","lostLife","cannonBallsDestroyed","flyingDiscsDestroyed","indexOf","initialGameState","initialState","reducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render"],"mappings":"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","file":"static/js/main.ddeaecca.chunk.js","sourcesContent":["export const pathFromBezierCurve = (cubicBezierCurve) => {\r\n    const {\r\n        initialAxis, initialControlPoint, endingControlPoint, endingAxis\r\n    } = cubicBezierCurve;\r\n    return `\r\n        M${initialAxis.x} ${initialAxis.y}\r\n        c ${initialControlPoint.x} ${initialControlPoint.y}\r\n        ${endingControlPoint.x} ${endingControlPoint.y}\r\n        ${endingAxis.x} ${endingAxis.y}\r\n    `\r\n}\r\n\r\n// converts radians to degrees\r\nexport const radiansToDegrees = radians => ((radians * 180) / Math.PI);\r\n\r\nexport const calculateAngle = (x1, y1, x2, y2) => {\r\n    if (x2 >= 0 && y2 >= 0) {\r\n        return 90;\r\n    } else if (x2 < 0 && y2 >= 0) {\r\n        return -90;\r\n    }\r\n\r\n    const dividend = x2 - x1;\r\n    const divisor = y2 - y1;\r\n    const quotient = dividend / divisor;\r\n    return radiansToDegrees(Math.atan(quotient)) * -1;\r\n}\r\n\r\nexport const getCanvasPosition = (e) => {\r\n    const svg = document.getElementById('aliens-go-home-canvas');\r\n    const point = svg.createSVGPoint();\r\n\r\n    point.x = e.clientX;\r\n    point.y = e.clientY;\r\n    const { x, y } = point.matrixTransform(svg.getScreenCTM().inverse());\r\n    return { x, y }\r\n}\r\n\r\nconst degreesToRadian = degrees => ((degrees * Math.PI) / 180);\r\n\r\nexport const calculateNextPosition = (x, y, angle, divisor = 300) => {\r\n    const realAngle = (angle * -1) + 90;\r\n    const stepsX = radiansToDegrees(Math.cos(degreesToRadian(realAngle))) / divisor;\r\n    const stepsY = radiansToDegrees(Math.sin(degreesToRadian(realAngle))) / divisor;\r\n    return {\r\n        x: x + stepsX,\r\n        y: y - stepsY,\r\n    }\r\n};\r\n\r\n\r\nexport const checkCollision = (rectA, rectB) => (\r\n    rectA.x1 < rectB.x2 && rectA.x2 > rectB.x1 &&\r\n    rectA.y1 < rectB.y2 && rectA.y2 > rectB.y1\r\n);","import React from 'react';\r\nimport { pathFromBezierCurve } from '../utils/formulas';\r\n\r\nconst CannonBase = (props) =>{\r\n    const cannonBaseStyle={\r\n        fill: '#a16012',\r\n        stroke: '#75450e',\r\n        strokeWidth: '2px',\r\n    };\r\n    const baseWidth = 80;\r\n    const halfBase = 40;\r\n    const height= 60;\r\n    const negativeHeight = height * -1;\r\n\r\n    const cubicBezierCurve = {\r\n        initialAxis:{x: -halfBase, y: height},\r\n        initialControlPoint:{x:20, y:negativeHeight},\r\n        endingControlPoint:{x: 60, y: negativeHeight},\r\n        endingAxis:{x: baseWidth, y: 0},\r\n    };\r\n\r\n    return(\r\n        <g>\r\n            <path \r\n                style={cannonBaseStyle}\r\n                d={pathFromBezierCurve(cubicBezierCurve)}\r\n            />\r\n            <line \r\n                x1={-halfBase}\r\n                y1={height}\r\n                x2={halfBase}\r\n                y2={height}\r\n                style={cannonBaseStyle}\r\n            />\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default CannonBase;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { pathFromBezierCurve } from '../utils/formulas';\r\n\r\nconst CannonPipe = (props) => {\r\n    const cannonPipeStyle = {\r\n        fill: '#999',\r\n        stroke: '#666',\r\n        strokeWidth: '2px',\r\n    };\r\n    const transform = `rotate(${props.rotation}, 0, 0)`;\r\n\r\n    const muzzleWidth = 40;\r\n    const halfMuzzle = 20;\r\n    const height = 100;\r\n    const yBasis = 70;\r\n\r\n    const cubicBezierCurve = {\r\n        initialAxis: {\r\n            x: -halfMuzzle,\r\n            y: -yBasis,\r\n        },\r\n        initialControlPoint: {\r\n            x: -40,\r\n            y: height * 1.7,\r\n        },\r\n        endingControlPoint: {\r\n            x: 80,\r\n            y: height * 1.7,\r\n        },\r\n        endingAxis: {\r\n            x: muzzleWidth,\r\n            y: 0,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <g transform={transform}>\r\n            <path\r\n                style={cannonPipeStyle}\r\n                d={pathFromBezierCurve(cubicBezierCurve)}\r\n            />\r\n            <line\r\n                x1={-halfMuzzle}\r\n                y1={-yBasis}\r\n                x2={halfMuzzle}\r\n                y2={-yBasis}\r\n                style={cannonPipeStyle}\r\n            />\r\n        </g>\r\n    );\r\n};\r\n\r\nCannonPipe.propTypes = {\r\n    rotation: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CannonPipe;","export const skyAndGroundWidth = 5000;\r\n\r\nexport const gameWidth = 800;\r\n\r\nexport const gameHeight = 1200;\r\n\r\nexport const createInterval = 1000;\r\n\r\nexport const maxFlyingObjects = 4;\r\n\r\nexport const flyingObjectsStarterYAxis = -1100;\r\n\r\nexport const flyingObjectsStarterPositions = [\r\n    -300,\r\n    -150,\r\n    150,\r\n    300\r\n];","import React from 'react';\r\nimport { skyAndGroundWidth } from '../utils/constants';\r\n\r\n\r\nconst Ground = () =>{\r\n    const groundStyle ={fill: '#59a941'};\r\n    const division = {\r\n        stroke: '#458232',\r\n        strokeWidth: '3px',\r\n    };\r\n    // const groundWidth = 5000 //matches sky width\r\n\r\n    return(\r\n        <g id='ground'>\r\n            <rect\r\n                id='ground-2'\r\n                data-name='ground'\r\n                style={groundStyle}\r\n                x={skyAndGroundWidth / -2}\r\n                y={0}\r\n                width={skyAndGroundWidth}\r\n                height={100}\r\n            />\r\n            <line\r\n                x1={skyAndGroundWidth / -2}\r\n                y1={0}\r\n                x2={skyAndGroundWidth / 2}\r\n                y2={0}\r\n                style={division}\r\n            />\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default Ground;","import React from 'react';\r\nimport { skyAndGroundWidth } from '../utils/constants';\r\n\r\nconst Sky = () =>{\r\n    const skyStyle = {fill: '#30abef'};\r\n    // const skyWidth = 5000; //not important in this game, just needs to cover any screen size\r\n    const gameHeight = 1200; \r\n    return(\r\n        <rect\r\n            style={skyStyle}\r\n            x={skyAndGroundWidth / -2}\r\n            y={100 - gameHeight}\r\n            width={skyAndGroundWidth}\r\n            height={gameHeight}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Sky","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CannonBall = (props) =>{\r\n    const ballStyle = {\r\n        fill: '#777',\r\n        stroke: '#444',\r\n        strokeWidth: '2px'\r\n    };\r\n\r\n    return(\r\n        <ellipse\r\n            style={ballStyle}\r\n            cx={props.position.x}\r\n            cy={props.position.y}\r\n            rx='16'\r\n            ry='16'\r\n        />\r\n    )\r\n}\r\n\r\nCannonBall.propTypes ={\r\n    position: PropTypes.shape({\r\n        x: PropTypes.number.isRequired,\r\n        y: PropTypes.number.isRequired\r\n    }).isRequired,\r\n};\r\n\r\nexport default CannonBall","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CurrentScore = (props) =>{\r\n    const scoreStyle={\r\n        fontFamily: '\"Joti One\", cursive',\r\n        fontSize: 80,\r\n        fill: '#d6d33e'\r\n    };\r\n\r\n    return(\r\n        <g filter='url(#shadow)'>\r\n            <text style={scoreStyle} x='500' y='80'>\r\n                {props.score}\r\n            </text>\r\n        </g>\r\n    )\r\n}\r\n\r\nCurrentScore.propTypes = {\r\n    score: PropTypes.number.isRequired\r\n};\r\n\r\nexport default CurrentScore;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FlyingObjectBase = (props) =>{\r\n    const style = {\r\n        fill: '#979797',\r\n        stroke: '#5c5c5c'\r\n    };\r\n\r\n    return(\r\n        <ellipse\r\n            cx={props.position.x}\r\n            cy={props.position.y}\r\n            rx='40'\r\n            ry='10'\r\n            style={style}\r\n        />\r\n    )\r\n}\r\n\r\nFlyingObjectBase.propTypes ={\r\n    position: PropTypes.shape({\r\n        x: PropTypes.number.isRequired,\r\n        y: PropTypes.number.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default FlyingObjectBase","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { pathFromBezierCurve } from '../utils/formulas';\r\n\r\nconst FlyingObjectTop = (props) => {\r\n    const style = {\r\n        fill: '#b6b6b6',\r\n        stroke: '#7d7d7d',\r\n    };\r\n\r\n    const baseWith = 40;\r\n    const halfBase = 20;\r\n    const height = 25;\r\n\r\n    const cubicBezierCurve = {\r\n        initialAxis: {\r\n            x: props.position.x - halfBase,\r\n            y: props.position.y,\r\n        },\r\n        initialControlPoint: {\r\n            x: 10,\r\n            y: -height,\r\n        },\r\n        endingControlPoint: {\r\n            x: 30,\r\n            y: -height,\r\n        },\r\n        endingAxis: {\r\n            x: baseWith,\r\n            y: 0,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <path\r\n            style={style}\r\n            d={pathFromBezierCurve(cubicBezierCurve)}\r\n        />\r\n    );\r\n};\r\n\r\nFlyingObjectTop.propTypes = {\r\n    position: PropTypes.shape({\r\n        x: PropTypes.number.isRequired,\r\n        y: PropTypes.number.isRequired\r\n    }).isRequired,\r\n};\r\n\r\nexport default FlyingObjectTop;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FlyingObjectBase from './FlyingObjectBase';\r\nimport FlyingObjectTop from './FlyingObjectTop';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { gameHeight } from '../utils/constants';\r\n\r\nconst moveVertically = keyframes`\r\n    0%{\r\n        transform: translateY(0);\r\n    }\r\n    100%{\r\n        transform: translateY(${gameHeight}px);\r\n    }\r\n`;\r\n\r\nconst Move = styled.g`\r\n    animation: ${moveVertically} 4s linear;\r\n`;\r\n\r\nconst FlyingObject = (props) => (\r\n    <Move>\r\n        <FlyingObjectBase position={props.position} />\r\n        <FlyingObjectTop position={props.position} />\r\n    </Move>\r\n);\r\n\r\nFlyingObject.propTypes = {\r\n    position: PropTypes.shape({\r\n        x: PropTypes.number.isRequired,\r\n        y: PropTypes.number.isRequired\r\n    }).isRequired,\r\n};\r\n\r\nexport default FlyingObject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { pathFromBezierCurve } from '../utils/formulas';\r\n\r\nconst Heart = (props) => {\r\n    const heartStyle = {\r\n        fill: '#da0d15',\r\n        stroke: '#a51708',\r\n        strokeWidth: '2px',\r\n    };\r\n\r\n    const leftSide = {\r\n        initialAxis: {\r\n            x: props.position.x,\r\n            y: props.position.y\r\n        },\r\n        initialControlPoint: {\r\n            x: -20,\r\n            y: -20\r\n        },\r\n        endingControlPoint: {\r\n            x: -40,\r\n            y: 10,\r\n        },\r\n        endingAxis: {\r\n            x: 0,\r\n            y: 40,\r\n        },\r\n    }\r\n\r\n    const rightSide = {\r\n        initialAxis: {\r\n            x: props.position.x,\r\n            y: props.position.y,\r\n        },\r\n        initialControlPoint: {\r\n            x: 20,\r\n            y: -20,\r\n        },\r\n        endingControlPoint: {\r\n            x: 40,\r\n            y: 10,\r\n        },\r\n        endingAxis: {\r\n            x: 0,\r\n            y: 40,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <g filter=\"url(#shadow)\">\r\n            <path\r\n                style={heartStyle}\r\n                d={pathFromBezierCurve(leftSide)}\r\n            />\r\n            <path\r\n                style={heartStyle}\r\n                d={pathFromBezierCurve(rightSide)}\r\n            />\r\n        </g>\r\n    );\r\n};\r\n\r\nHeart.propTypes = {\r\n    position: PropTypes.shape({\r\n        x: PropTypes.number.isRequired,\r\n        y: PropTypes.number.isRequired\r\n    }).isRequired,\r\n};\r\n\r\nexport default Heart;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { gameWidth } from '../utils/constants';\r\n\r\nconst StartGame = (props) => {\r\n    const button = {\r\n        x: gameWidth / -2, //half width\r\n        y: -280, //minus means up\r\n        width: gameWidth,\r\n        height: 200,\r\n        rx: 10,\r\n        ry: 10,\r\n        style: {\r\n            fill: 'transparent',\r\n            cursor: 'pointer'\r\n        },\r\n        onClick: props.onClick\r\n    };\r\n\r\n    const text = {\r\n        textAnchor: 'middle',\r\n        x: 0,\r\n        y: -150,\r\n        style: {\r\n            fontFamily: '\"Joti One\", cursive',\r\n            fontSize: 60,\r\n            fill: '#e3e3e3',\r\n            cursor: 'pointer',\r\n        },\r\n        onClick: props.onClick,\r\n    };\r\n    return (\r\n        <g filter='url(#shadow)'>\r\n            <rect {...button} />\r\n            <text {...text}>\r\n                Tap To Start!\r\n            </text>\r\n        </g>\r\n    )\r\n}\r\n\r\nStartGame.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default StartGame;\r\n\r\n","import React from 'react';\r\nimport { pathFromBezierCurve } from '../utils/formulas';\r\n\r\nconst Title = () => {\r\n    const textStyle = {\r\n        fontFamily: '\"Joti One\", cursive',\r\n        fontSize: 120,\r\n        fill: '#cbca62',\r\n    };\r\n\r\n    const aliensLineCurve = {\r\n        initialAxis: {\r\n            x: -190,\r\n            y: -950,\r\n        },\r\n        initialControlPoint: {\r\n            x: 95,\r\n            y: -50,\r\n        },\r\n        endingControlPoint: {\r\n            x: 285,\r\n            y: -50,\r\n        },\r\n        endingAxis: {\r\n            x: 380,\r\n            y: 0,\r\n        },\r\n    };\r\n\r\n    const goHomeLineCurve = {\r\n        ...aliensLineCurve,\r\n        initialAxis: {\r\n            x: -250,\r\n            y: -780,\r\n        },\r\n        initialControlPoint: {\r\n            x: 125,\r\n            y: -90,\r\n        },\r\n        endingControlPoint: {\r\n            x: 375,\r\n            y: -90,\r\n        },\r\n        endingAxis: {\r\n            x: 500,\r\n            y: 0,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <g filter=\"url(#shadow)\">\r\n            <defs>\r\n                <path\r\n                    id=\"AliensPath\"\r\n                    d={pathFromBezierCurve(aliensLineCurve)}\r\n                />\r\n                <path\r\n                    id=\"GoHomePath\"\r\n                    d={pathFromBezierCurve(goHomeLineCurve)}\r\n                />\r\n            </defs>\r\n            <text {...textStyle}>\r\n                <textPath xlinkHref=\"#AliensPath\">\r\n                    Aliens,\r\n                </textPath>\r\n            </text>\r\n            <text {...textStyle}>\r\n                <textPath xlinkHref=\"#GoHomePath\">\r\n                    Go Home!\r\n                </textPath>\r\n            </text>\r\n        </g>\r\n    );\r\n};\r\n\r\nexport default Title;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => {\r\n    const button = {\r\n        x: -300, // half width\r\n        y: -600, // minus means up (above 0)\r\n        width: 600,\r\n        height: 300,\r\n        style: {\r\n            fill: 'transparent',\r\n            cursor: 'pointer',\r\n        },\r\n        onClick: props.authenticate,\r\n    };\r\n\r\n    const text = {\r\n        textAnchor: 'middle', // center\r\n        x: 0, // center relative to X axis\r\n        y: -440, // 440 up\r\n        style: {\r\n            fontFamily: '\"Joti One\", cursive',\r\n            fontSize: 45,\r\n            fill: '#e3e3e3',\r\n            cursor: 'pointer',\r\n        },\r\n        onClick: props.authenticate,\r\n    };\r\n\r\n    return (\r\n        <g filter=\"url(#shadow)\">\r\n            <rect {...button} />\r\n            <text {...text}>\r\n                Login to participate!\r\n            </text>\r\n        </g>\r\n    );\r\n};\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rank = (props) => {\r\n    const { x, y } = props.position;\r\n\r\n    const rectId = 'rect' + props.player.rank;\r\n    const clipId = 'clip' + props.player.rank;\r\n\r\n    const pictureStyle = {\r\n        height: 60,\r\n        width: 60,\r\n    };\r\n\r\n    const textStyle = {\r\n        fontFamily: '\"Joti One\", cursive',\r\n        fontSize: 35,\r\n        fill: '#e3e3e3',\r\n        cursor: 'default',\r\n    };\r\n\r\n    if (props.player.currentPlayer) textStyle.fill = '#e9ea64';\r\n\r\n    const pictureProperties = {\r\n        style: pictureStyle,\r\n        x: x - 140,\r\n        y: y - 40,\r\n        href: props.player.picture,\r\n        clipPath: `url(#${clipId})`,\r\n    };\r\n\r\n    const frameProperties = {\r\n        width: 55,\r\n        height: 55,\r\n        rx: 30,\r\n        x: pictureProperties.x,\r\n        y: pictureProperties.y,\r\n    };\r\n\r\n    return (\r\n        <g>\r\n            <defs>\r\n                <rect id={rectId} {...frameProperties} />\r\n                <clipPath id={clipId}>\r\n                    <use xlinkHref={'#' + rectId} />\r\n                </clipPath>\r\n            </defs>\r\n            <use xlinkHref={'#' + rectId} strokeWidth=\"2\" stroke=\"black\" />\r\n            <text filter=\"url(#shadow)\" style={textStyle} x={x - 200} y={y}>{props.player.rank}º</text>\r\n            <image {...pictureProperties} />\r\n            <text filter=\"url(#shadow)\" style={textStyle} x={x - 60} y={y}>{props.player.name}</text>\r\n            <text filter=\"url(#shadow)\" style={textStyle} x={x + 350} y={y}>{props.player.maxScore}</text>\r\n        </g>\r\n    );\r\n};\r\n\r\nRank.propTypes = {\r\n    player: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        maxScore: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        picture: PropTypes.string.isRequired,\r\n        rank: PropTypes.number.isRequired,\r\n        currentPlayer: PropTypes.bool.isRequired,\r\n    }).isRequired,\r\n    position: PropTypes.shape({\r\n        x: PropTypes.number.isRequired,\r\n        y: PropTypes.number.isRequired\r\n    }).isRequired,\r\n};\r\n\r\nexport default Rank;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Login from './Login';\r\nimport Rank from \"./Rank\";\r\n\r\nconst Leaderboard = (props) => {\r\n    const style = {\r\n        fill: 'transparent',\r\n        stroke: 'black',\r\n        strokeDasharray: '15',\r\n    };\r\n\r\n    const leaderboardTitle = {\r\n        fontFamily: '\"Joti One\", cursive',\r\n        fontSize: 50,\r\n        fill: '#88da85',\r\n        cursor: 'default',\r\n    };\r\n\r\n    let leaderboard = props.leaderboard || [];\r\n    leaderboard = leaderboard.sort((prev, next) => {\r\n        if (prev.maxScore === next.maxScore) {\r\n            return prev.name <= next.name ? 1 : -1;\r\n        }\r\n        return prev.maxScore < next.maxScore ? 1 : -1;\r\n    }).map((member, index) => ({\r\n        ...member,\r\n        rank: index + 1,\r\n        currentPlayer: member.id === props.currentPlayer.id,\r\n    })).filter((member, index) => {\r\n        if (index < 3 || member.id === props.currentPlayer.id) return member;\r\n        return null;\r\n    });\r\n\r\n    return (\r\n        <g>\r\n            <text filter=\"url(#shadow)\" style={leaderboardTitle} x=\"-150\" y=\"-630\">Leaderboard</text>\r\n            <rect style={style} x=\"-350\" y=\"-600\" width=\"700\" height=\"330\" />\r\n            {\r\n                props.currentPlayer && leaderboard.map((player, idx) => {\r\n                    const position = {\r\n                        x: -100,\r\n                        y: -530 + (70 * idx)\r\n                    };\r\n                    return <Rank key={player.id} player={player} position={position} />\r\n                })\r\n            }\r\n            {\r\n                !props.currentPlayer && <Login authenticate={props.authenticate} />\r\n            }\r\n        </g>\r\n    );\r\n};\r\n\r\nLeaderboard.propTypes = {\r\n    currentPlayer: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        maxScore: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        picture: PropTypes.string.isRequired,\r\n    }),\r\n    authenticate: PropTypes.func.isRequired,\r\n    leaderboard: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        maxScore: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        picture: PropTypes.string.isRequired,\r\n        ranking: PropTypes.number,\r\n    })),\r\n};\r\n\r\nLeaderboard.defaultProps = {\r\n    currentPlayer: null,\r\n    leaderboard: null,\r\n};\r\n\r\nexport default Leaderboard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CannonBase from './CanonBase';\r\nimport CannonPipe from './CanonPipe';\r\nimport Ground from './Ground';\r\nimport Sky from './Sky';\r\nimport CannonBall from './CannonBall';\r\nimport CurrentScore from './CurrentScore';\r\nimport FlyingObject from './FlyingObject.jsx';\r\nimport Heart from './Heart';\r\nimport StartGame from './StartGame';\r\nimport Title from './Title';\r\nimport Leaderboard from './Leaderboard';\r\nimport { signIn } from 'auth0-web';\r\n\r\nconst Canvas = (props) => {\r\n    const gameHeight = 1200;\r\n    const viewBox = [window.innerWidth / -2, 100 - gameHeight, window.innerWidth, gameHeight]\r\n    const lives = [];\r\n    for (let i=0; i < props.gameState.lives; i++){\r\n        const heartPosition = {\r\n            x: -180 - (i * 70),\r\n            y: 35\r\n        };\r\n        lives.push(<Heart key={i} position={heartPosition}/>)\r\n    }\r\n\r\n    return (\r\n        <svg\r\n            id='aliens-go-home-canvas'\r\n            preserveAspectRatio='xMaxYMax none'\r\n            viewBox={viewBox}\r\n            onMouseMove={props.trackMouse}\r\n            onClick={props.shoot}\r\n        >\r\n            <defs>\r\n                <filter id='shadow'>\r\n                    <feDropShadow dx='1' dy='1' stdDeviation='2' />\r\n                </filter>\r\n            </defs>\r\n            <Sky /> {/* SVG does not support z-index; relies on the order that elements are listed */}\r\n            <Ground />\r\n            {props.gameState.cannonBalls.map(cannonBall =>(\r\n                <CannonBall\r\n                    key={cannonBall.id}\r\n                    position={cannonBall.position}\r\n                />\r\n            ))}\r\n            <CannonPipe rotation={props.angle} />\r\n            <CannonBase />\r\n            <CurrentScore score={props.gameState.kills} />\r\n            {!props.gameState.started &&\r\n                <g>\r\n                    <StartGame onClick={() => props.startGame()} />\r\n                    <Title />\r\n                    <Leaderboard currentPlayer={props.currentPlayer} authenticate={signIn} leaderboard={props.players} />\r\n                </g>\r\n            }\r\n\r\n            {props.gameState.flyingObjects.map(flyingObject => (\r\n                <FlyingObject\r\n                    key={flyingObject.id}\r\n                    position={flyingObject.position}\r\n                />\r\n            ))}\r\n            {lives}\r\n            {/* {props.gameState.started &&\r\n                <g>\r\n                    <FlyingObject position={{ x: -150, y: -300 }} />\r\n                    <FlyingObject position={{ x: 150, y: -300 }} />\r\n                </g>\r\n            } */}\r\n            {/* <CannonBall position={{x:0, y: -100}} /> */}\r\n            {/* <Heart position={{x: -300, y: 35}} /> */}\r\n            {/* <StartGame onClick={()=> console.log('Aliens, Go Home!')} /> */}\r\n            {/* <Title /> */}\r\n        </svg>\r\n    )\r\n}\r\n\r\nCanvas.propTypes = {\r\n    angle: PropTypes.number.isRequired,\r\n    gameState: PropTypes.shape({\r\n        started: PropTypes.bool.isRequired,\r\n        kills: PropTypes.number.isRequired,\r\n        lives: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n    trackMouse: PropTypes.func.isRequired,\r\n    startGame: PropTypes.func.isRequired,\r\n    currentPlayer: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        maxScore: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        picture: PropTypes.string.isRequired,\r\n    }),\r\n    players: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        maxScore: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        picture: PropTypes.string.isRequired,\r\n    })),\r\n    shoot: PropTypes.func.isRequired,\r\n};\r\n\r\nCanvas.defaultProps = {\r\n    currentPlayer: null,\r\n    players: null,\r\n};\r\n\r\nexport default Canvas","import React, { Component } from \"react\";\nimport Canvas from \"./components/Canvas\";\nimport PropTypes from 'prop-types';\nimport { getCanvasPosition } from \"./utils/formulas\";\nimport * as Auth0 from 'auth0-web';\nimport io from 'socket.io-client';\n\n// article written in 2018, uses class components:\n// class App extends Component{\n//   render(){\n//     return(\n//       <div>\n//         <h1>{this.props.message}</h1>\n//       </div>\n//     )\n//   }\n// }\n\n// with functional components, write like this\n// function App({message}) {\n//   return (\n//     <div className=\"App\">\n//       <h1>{message}</h1>\n//     </div>\n//   );\n// }\n\nAuth0.configure({\n  domain: 'dev-x2zn23xz.us.auth0.com',\n  clientID: 'an2POIWVK1yHxQliKyyxZMCdxAx1cFb3',\n  redirectUri: 'http://localhost:3000/',\n  responseType: 'token id_token',\n  scope: 'openid profile manage:points',\n  audience: 'https://chasemalcom.com/AlienGame/'\n})\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.shoot = this.shoot.bind(this);\n    this.socket = null;\n    this.currentPlayer = null;\n  }\n  componentDidMount() {\n    const self = this;\n\n    Auth0.handleAuthCallback();\n\n    Auth0.subscribe((auth) => {\n      if (!auth) return;\n\n      self.playerProfile = Auth0.getProfile();\n      self.currentPlayer = {\n        id: self.playerProfile.sub,\n        maxScore: 0,\n        name: self.playerProfile.name,\n        picture: self.playerProfile.picture,\n      };\n\n      this.props.loggedIn(self.currentPlayer);\n\n      self.socket = io('http://localhost:3001', {\n        query: `token=${Auth0.getAccessToken()}`,\n      });\n\n      self.socket.on('players', (players) => {\n        this.props.leaderboardLoaded(players);\n        players.forEach((player) => {\n          if (player.id === self.currentPlayer.id) {\n            self.currentPlayer.maxScore = player.maxScore;\n          }\n        });\n      });\n    });\n\n    setInterval(() => {\n      self.props.moveObjects(self.canvasMousePosition);\n    }, 10);\n\n    window.onresize = () => {\n      const cnv = document.getElementById('aliens-go-home-canvas');\n      cnv.style.width = `${window.innerWidth}px`\n      cnv.style.height = `${window.innerHeight}px`\n    };\n    window.onresize();\n  }\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.gameState.started && this.props.gameState.started) {\n      if (this.currentPlayer.maxScore < this.props.gameState.kills) {\n        this.socket.emit('new-max-score', {\n          ...this.currentPlayer,\n          maxScore: this.props.gameState.kills,\n        });\n      }\n    }\n  }\n\n  trackMouse(e) {\n    this.canvasMousePosition = getCanvasPosition(e)\n  }\n\n  shoot(){\n    this.props.shoot(this.canvasMousePosition);\n  }\n\n  render() {\n    return (\n      <Canvas\n        angle={this.props.angle}\n        currentPlayer={this.props.currentPlayer}\n        gameState={this.props.gameState}\n        players={this.props.players}\n        startGame={this.props.startGame}\n        trackMouse={e => (this.trackMouse(e))}\n        shoot = {this.shoot}\n      />\n    );\n  }\n}\n\nApp.propTypes = {\n  angle: PropTypes.number.isRequired,\n  gameState: PropTypes.shape({\n    started: PropTypes.bool.isRequired,\n    kills: PropTypes.number.isRequired,\n    lives: PropTypes.number.isRequired,\n    flyingObjects: PropTypes.arrayOf(PropTypes.shape({\n      position: PropTypes.shape({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired\n      }).isRequired,\n      id: PropTypes.number.isRequired,\n    })).isRequired,\n  }).isRequired,\n  moveObjects: PropTypes.func.isRequired,\n  startGame: PropTypes.func.isRequired,\n  currentPlayer: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    maxScore: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired,\n  }),\n  leaderboardLoaded: PropTypes.func.isRequired,\n  loggedIn: PropTypes.func.isRequired,\n  players: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    maxScore: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired,\n  })),\n  shoot: PropTypes.func.isRequired,\n}\n\nApp.defaultProps = {\n  currentPlayer: null,\n  players: null,\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const MOVE_OBJECTS = 'MOVE_OBJECTS';\r\nexport const START_GAME = 'START_GAME';\r\nexport const LEADERBOARD_LOADED = 'LEADERBOARD_LOADED';\r\nexport const LOGGED_IN = 'LOGGED_IN';\r\nexport const SHOOT = 'SHOOT'\r\n\r\nexport const moveObjects = mousePosition => ({\r\n    type: MOVE_OBJECTS,\r\n    mousePosition,\r\n})\r\n\r\nexport const startGame = () => ({\r\n    type: START_GAME,\r\n})\r\n\r\nexport const leaderboardLoaded = players => ({\r\n    type: LEADERBOARD_LOADED,\r\n    players,\r\n});\r\n\r\nexport const loggedIn = player => ({\r\n    type: LOGGED_IN,\r\n    player,\r\n});\r\n\r\nexport const shoot = (mousePosition)=>({\r\n    type: SHOOT,\r\n    mousePosition,\r\n})","import { connect } from 'react-redux';\r\n\r\nimport App from '../App';\r\nimport { moveObjects, startGame, leaderboardLoaded, loggedIn, shoot } from '../actions/index';\r\n\r\nconst mapStateToProps = state =>({\r\n    angle: state.angle,\r\n    gameState: state.gameState,\r\n    currentPlayer: state.currentPlayer,\r\n    players: state.players,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    moveObjects: (mousePosition) =>{\r\n        dispatch(moveObjects(mousePosition))\r\n    },\r\n    startGame: ()=>{\r\n        dispatch(startGame())\r\n    },\r\n    leaderboardLoaded: (players) => {\r\n        dispatch(leaderboardLoaded(players))\r\n    },\r\n    loggedIn: (player) =>{\r\n        dispatch(loggedIn(player))\r\n    },\r\n    shoot: (mousePosition) =>{\r\n        dispatch(shoot(mousePosition))\r\n    }\r\n})\r\n\r\nconst Game = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(App);\r\n\r\nexport default Game;","import { calculateNextPosition } from \"../utils/formulas\";\r\n\r\nconst moveBalls = cannonBalls => (\r\n    cannonBalls\r\n        .filter(cannonBall => (\r\n            cannonBall.position.y > -1000 && cannonBall.position.x > -500 && cannonBall.position.x < 500\r\n        ))\r\n        .map((cannonBall) => {\r\n            const { x, y } = cannonBall.position;\r\n            const { angle } = cannonBall;\r\n            return {\r\n                ...cannonBall,\r\n                position: calculateNextPosition(x, y, angle, 5),\r\n            };\r\n        })\r\n);\r\n\r\nexport default moveBalls;","import { checkCollision } from '../utils/formulas';\r\nimport { gameHeight } from '../utils/constants';\r\n\r\nconst checkCollisions = (cannonBalls, flyingDiscs) => {\r\n    const objectsDestroyed = [];\r\n    flyingDiscs.forEach((flyingDisc) => {\r\n        const currentLifeTime = (new Date()).getTime() - flyingDisc.createdAt;\r\n        const calculatedPosition = {\r\n            x: flyingDisc.position.x,\r\n            y: flyingDisc.position.y + ((currentLifeTime / 4000) * gameHeight),\r\n        };\r\n        const rectA = {\r\n            x1: calculatedPosition.x - 40,\r\n            y1: calculatedPosition.y - 10,\r\n            x2: calculatedPosition.x + 40,\r\n            y2: calculatedPosition.y + 10,\r\n        };\r\n        cannonBalls.forEach((cannonBall) => {\r\n            const rectB = {\r\n                x1: cannonBall.position.x - 8,\r\n                y1: cannonBall.position.y - 8,\r\n                x2: cannonBall.position.x + 8,\r\n                y2: cannonBall.position.y + 8,\r\n            };\r\n            if (checkCollision(rectA, rectB)) {\r\n                objectsDestroyed.push({\r\n                    cannonBallId: cannonBall.id,\r\n                    flyingDiscId: flyingDisc.id,\r\n                });\r\n            }\r\n        });\r\n    });\r\n    return objectsDestroyed;\r\n};\r\n\r\nexport default checkCollisions;","import { calculateAngle } from '../utils/formulas';\r\nimport createFlyingObjects from './createFlyingObjects';\r\nimport moveBalls from './moveCannonBalls';\r\nimport checkCollisions from './checkCollisions';\r\n\r\n\r\nfunction moveObjects(state, action) {\r\n    if (!state.gameState.started) return state;\r\n    let cannonBalls = moveBalls(state.gameState.cannonBalls);\r\n\r\n    const mousePosition = action.mousePosition || {\r\n        x: 0,\r\n        y: 0,\r\n    }\r\n\r\n    const newState = createFlyingObjects(state);\r\n\r\n    const now = (new Date()).getTime();\r\n    let flyingObjects = newState.gameState.flyingObjects.filter(object => (\r\n        (now - object.createdAt) < 4000\r\n    ));\r\n\r\n    const lostLife = state.gameState.flyingObjects.length > flyingObjects.length;\r\n    let lives = state.gameState.lives;\r\n\r\n    if (lostLife){\r\n        lives--;\r\n    }\r\n\r\n    const started = lives > 0;\r\n    if (!started){\r\n        flyingObjects=[];\r\n        cannonBalls =[];\r\n        lives = 3;\r\n    }\r\n\r\n    const { x, y } = mousePosition;\r\n    const angle = calculateAngle(0, 0, x, y);\r\n\r\n    const objectsDestroyed = checkCollisions(cannonBalls, flyingObjects);\r\n    const cannonBallsDestroyed = objectsDestroyed.map(object => (object.cannonBallId));\r\n    const flyingDiscsDestroyed = objectsDestroyed.map(object => (object.flyingDiscId));\r\n\r\n    cannonBalls = cannonBalls.filter(cannonBall => (cannonBallsDestroyed.indexOf(cannonBall.id)));\r\n    flyingObjects = flyingObjects.filter(flyingDisc => (flyingDiscsDestroyed.indexOf(flyingDisc.id)));\r\n\r\n    const kills = state.gameState.kills + flyingDiscsDestroyed.length;\r\n\r\n    return {\r\n        ...newState,\r\n        gameState: {\r\n            ...newState.gameState,\r\n            flyingObjects,\r\n            cannonBalls: [...cannonBalls],\r\n            lives,\r\n            started,\r\n            kills\r\n        },\r\n        angle,\r\n    };\r\n}\r\n\r\nexport default moveObjects;","import {\r\n    createInterval, flyingObjectsStarterYAxis, maxFlyingObjects,\r\n    flyingObjectsStarterPositions\r\n} from '../utils/constants';\r\n\r\nexport default (state) => {\r\n    if (!state.gameState.started) return state; // game not running\r\n\r\n    const now = (new Date()).getTime();\r\n    const { lastObjectCreatedAt, flyingObjects } = state.gameState;\r\n    const createNewObject = (\r\n        now - (lastObjectCreatedAt).getTime() > createInterval &&\r\n        flyingObjects.length < maxFlyingObjects\r\n    );\r\n\r\n    if (!createNewObject) return state; // no need to create objects now\r\n\r\n    const id = (new Date()).getTime();\r\n    const predefinedPosition = Math.floor(Math.random() * maxFlyingObjects);\r\n    const flyingObjectPosition = flyingObjectsStarterPositions[predefinedPosition];\r\n    const newFlyingObject = {\r\n        position: {\r\n            x: flyingObjectPosition,\r\n            y: flyingObjectsStarterYAxis,\r\n        },\r\n        createdAt: (new Date()).getTime(),\r\n        id,\r\n    };\r\n\r\n    return {\r\n        ...state,\r\n        gameState: {\r\n            ...state.gameState,\r\n            flyingObjects: [\r\n                ...state.gameState.flyingObjects,\r\n                newFlyingObject\r\n            ],\r\n            lastObjectCreatedAt: new Date(),\r\n        }\r\n    }\r\n}","export default (state, initialGameState) =>{\r\n    return{\r\n        ...state,\r\n        gameState:{\r\n            ...initialGameState,\r\n            started: true,\r\n        }\r\n    }\r\n};","import { calculateAngle } from \"../utils/formulas\";\r\n\r\nfunction shoot(state, action) {\r\n    if (!state.gameState.started) return state;\r\n\r\n    const { cannonBalls } = state.gameState;\r\n\r\n    if (cannonBalls.length === 2) return state;\r\n\r\n    const { x, y } = action.mousePosition;\r\n\r\n    const angle = calculateAngle(0, 0, x, y);\r\n\r\n    const id = (new Date()).getTime();\r\n    const cannonBall = {\r\n        position: { x: 0, y: 0 },\r\n        angle,\r\n        id,\r\n    };\r\n\r\n    return {\r\n        ...state,\r\n        gameState: {\r\n            ...state.gameState,\r\n            cannonBalls: [...cannonBalls, cannonBall],\r\n        }\r\n    };\r\n\r\n    }\r\n\r\n    export default shoot;","import { MOVE_OBJECTS, START_GAME, LEADERBOARD_LOADED, LOGGED_IN, SHOOT } from \"../actions\";\r\nimport moveObjects from './moveObjects';\r\nimport startGame from './startGame';\r\nimport shoot from \"./shoot\";\r\n\r\nconst initialGameState={\r\n    started: false,\r\n    kills: 0,\r\n    lives: 3,\r\n    flyingObjects: [],\r\n    lastObjectCreatedAt: new Date(),\r\n    currentPlayer: null,\r\n    players: null,\r\n    cannonBalls: []\r\n};\r\n\r\nconst initialState ={\r\n    angle: 45,\r\n    gameState: initialGameState\r\n};\r\n\r\nfunction reducer (state = initialState, action){\r\n    switch(action.type){\r\n        case LEADERBOARD_LOADED:\r\n            return{\r\n                ...state,\r\n                players: action.players,\r\n            };\r\n        case LOGGED_IN:\r\n            return{\r\n                ...state,\r\n                currentPlayer: action.player,\r\n            };\r\n        case MOVE_OBJECTS:  \r\n            return moveObjects(state, action);\r\n        case START_GAME:\r\n            return startGame(state, initialGameState);\r\n        case SHOOT:\r\n            return shoot(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport Game from './containers/Game';\nimport reducer from './reducers';\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n    <Provider store={store}>\n    <Game />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}